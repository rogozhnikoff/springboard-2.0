// display: inline-block hack
display(how) {
  if (how == inline-block) {
    @extend .p-ib;
  } else {
    display: how;
  }
}

// clearfix hack
clear(how) {
  if (how == fix) {
    @extend .p-clearfix;
  } else {
    clear: how;
  }
}

// simple icons mixin
icon(w, h, name, position = 'left top') {
  @extend .p-ib;
  width: w;
  height: h;
  background: transparent url('../img/icon/' + name + '.png') unquote(position) no-repeat;
  cursor: pointer;
}


// inline-block spacing hack
font-spacing(v = normal) {
  letter-spacing: v;
  word-spacing: v;
}

// colorize form's placeholders
placeholder(c){
  &::-webkit-input-placeholder{
    color: c;
  }
  &:-moz-placeholder{
    color: c;
  }
}

// selection color
select-color(c = selectionColor){
  * {
    &::selection{
      background: c;
    }
    &::-moz-selection{
      background: c;  // Firefox
    }
    &::-webkit-selection{
      background: c;  // Safari & Chrome
    }

    img{
      &::selection{
        background: c;
      }
      &::-moz-selection{
        background: c;  // Firefox
      }
      &::-webkit-selection{
        background: c;  // Safari & Chrome
      }
    }
  }
}


// link colors mixin
href(color = linkColor, colorHover = linkColorHover, colorActive = linkColorActive, colorVisited = linkColorVisited){
  color: color;

  &:visited {
    color: colorVisited;
  }

  &:link{
    color: color;
  }

  &:hover,
  &:focus{
    color: colorHover;
  }

  &:active{
    color: colorActive;
  }
}

// simple link colors mixin
href-pseudo(color = linkColor){
  color: color;

  &:visited{
    color: color;
  }
  &:link{
    color: color;
  }
}
